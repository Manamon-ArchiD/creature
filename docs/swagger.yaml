swagger: "2.0"
info:
  title: "Creature Microservice API"
  version: "1.0.0"
  description: "API documentation for the Creature microservice"
host: "localhost:3000"
basePath: "/"
schemes:
  - "http"
paths:
  /creatures:
    get:
      tags:
        - "Creatures"
      description: "Retrieve the list of creatures"
      responses:
        "200":
          description: "List of creatures"
          schema:
            type: "object"
            properties:
              creatures:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      type: "string"
                    name:
                      type: "string"
                    type:
                      type: "string"
                    attackPoint:
                      type: "integer"
                    defensePoint:
                      type: "integer"
                    rarity:
                      type: "integer"
        "404":
          description: "No creatures found"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "No creatures found"
    post:
      tags:
        - "Creatures"
      description: "Create a creature (role admin needed)"
      parameters:
        - name: "creature"
          in: "body"
          required: true
          description: "The creature to create"
          schema:
            type: "object"
            properties:
              name:
                type: "string"
              type:
                type: "string"
              attackPoint:
                type: "integer"
              defensePoint:
                type: "integer"
              rarity:
                type: "integer"
      responses:
        "200":
          description: "Creature created successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Creature created successfully"
        "400":
          description: "Invalid creature"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Invalid creature"

  /creatures/{id}:
    get:
      tags:
        - "Creatures"
      description: "Retrieve a creature by ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "The ID of the creature to retrieve"
          schema:
            type: "string"
      responses:
        "200":
          description: "Creature found"
          schema:
            type: "object"
            properties:
              creature:
                type: "object"
                properties:
                  id:
                    type: "string"
                  name:
                    type: "string"
                  type:
                    type: "string"
                  attackPoint:
                    type: "integer"
                  defensePoint:
                    type: "integer"
                  rarity:
                    type: "integer"
        "404":
          description: "Creature not found"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Creature not found"

    delete:
      tags:
        - "Creatures"
      description: "Delete a creature (role admin needed)"
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "The ID of the creature to delete"
          schema:
            type: "string"
      responses:
        "200":
          description: "Creature sold successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Creature deleted successfully"

        "404":
          description: "Creature not found"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Creature not found"
    put:
      tags:
        - "Creatures"
      description: "Update a creature (role admin needed)"
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "The ID of the creature to update"
          schema:
            type: "string"
        - name: "creature"
          in: "body"
          required: true
          description: "The creature to update"
          schema:
            type: "object"
            properties:
              name:
                type: "string"
              type:
                type: "string"
              attackPoint:
                type: "integer"
              defensePoint:
                type: "integer"
              rarity:
                type: "integer"
      responses:
        "200":
          description: "Creature updated successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Creature updated successfully"

        "404":
          description: "Creature not found"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Creature not found"
